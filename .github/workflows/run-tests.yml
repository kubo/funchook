name: tests
on:
  push:
  pull_request:

jobs:
  tests_on_alpine:
    name: Tests on Alpine (x86_64)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: x86_64 tests on Alpine
      run: |
        docker build -f .ci/Dockerfile-alpine-test -t funchook-test .
        docker run --rm funchook-test

  tests_on_intel_macos:
    name: Tests on macOS (x86_64)
    runs-on: macos-13
    steps:
    - uses: actions/checkout@v4
    - name: x86_64 tests on macOS
      run: |
        ./.ci/run-cmake-test.sh x86_64-darwin

  tests_on_m1_macos:
    name: Tests on macOS (M1)
    continue-on-error: true
    runs-on: macos-14
    steps:
    - uses: actions/checkout@v4
    - name: arm64 tests on macOS
      run: |
        ./.ci/run-cmake-test.sh arm64-darwin

  tests_on_ubuntu_arm64:
    name: Tests on Ubuntu (aarch64)
    runs-on: ubuntu-24.04-arm
    steps:
    - uses: actions/checkout@v4
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install cmake git g++
    - name: aarch64 tests on Ubuntu
      run: |
        ./.ci/run-cmake-test.sh aarch64-linux

  tests_on_ubuntu_x86_64:
    name: Tests on Ubuntu (x86_64 and i686)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-multilib g++-multilib
    - name: x86_64 tests on Ubuntu
      run: |
        ./.ci/run-cmake-test.sh x86_64-linux
    - name: i686 tests on Ubuntu
      run: |
        ./.ci/run-cmake-test.sh i686-linux -DCMAKE_C_FLAGS=-m32 -DCMAKE_ASM_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32

  tests_on_windows:
    name: Tests on Windows (x64 and x86)
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: x64 tests on Windows
      shell: bash
      run: |
        ./.ci/run-cmake-test.sh x86_64-windows -A x64
    - name: x86 tests on Windows
      shell: bash
      run: |
        ./.ci/run-cmake-test.sh x86-windows -A Win32

  tests_on_windows_arm64:
    name: Tests on Windows (aarch64)
    runs-on: windows-11-arm
    steps:
      - uses: actions/checkout@v4
      - name: arm64 tests on Windows
        shell: bash
        run: |
          ./.ci/run-cmake-test.sh arm64-windows -A ARM64 -DFUNCHOOK_CPU=arm64 -DFUNCHOOK_BUILD_TESTS=OFF

  tests_on_wine:
    name: Tests on Wine (x64 and x86)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install packages
      run: |
        sudo apt-get update
        sudo apt-get install -y g++-mingw-w64-x86-64 g++-mingw-w64-i686 wine64 wine-binfmt
        sudo dpkg --add-architecture i386
        sudo apt-get update
        sudo apt-get install -y libgcc-s1:i386 libstdc++6:i386 wine32
        sudo apt-get remove mono-runtime
        echo WINEPATH=$(ls -d /usr/lib/gcc/*-mingw*/*-win32 | tr '\n' ';') >> $GITHUB_ENV
    - name: x64 tests on Wine
      run: |
        ./.ci/run-cmake-test.sh x86_64-mingw32 -DCMAKE_TOOLCHAIN_FILE=../cmake/x86_64-w64-mingw32.cmake
    - name: x86 tests on Wine
      run: |
        ./.ci/run-cmake-test.sh i686-mingw32 -DCMAKE_TOOLCHAIN_FILE=../cmake/i686-w64-mingw32.cmake
